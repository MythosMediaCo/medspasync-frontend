{
  "name": "medspasync-backend",
  "version": "2.0.0",
  "description": "AI-powered HIPAA-compliant medical spa reconciliation platform",
  "main": "server.js",
  "scripts": {
    "dev": "nodemon server.js",
    "start": "node server.js",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate deploy",
    "prisma:studio": "prisma studio",
    "prisma:seed": "node prisma/seed.js",
    "build": "tsc --project tsconfig.json",
    "build:analyze": "npm run build && npx webpack-bundle-analyzer dist/stats.json",
    "test": "jest --coverage --verbose",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage --coverageReporters=text --coverageReporters=lcov",
    "test:performance": "node scripts/performance-test.js",
    "test:e2e": "playwright test",
    "lint": "eslint . --ext .js,.ts --max-warnings 0",
    "lint:fix": "eslint . --ext .js,.ts --fix",
    "format": "prettier --write \"**/*.{js,ts,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,ts,json,md}\"",
    "type-check": "tsc --noEmit",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "security:update": "npm update",
    "performance:profile": "node --prof server.js",
    "performance:analyze": "node --prof-process isolate-*.log > profile.txt",
    "env:validate": "node scripts/deploy.js validate",
    "env:health": "node scripts/deploy.js health",
    "env:report": "node -e \"console.log(JSON.stringify(require('./config/environment-manager').generateReport(), null, 2))\"",
    "deploy:dev": "NODE_ENV=development node scripts/deploy.js deploy",
    "deploy:staging": "NODE_ENV=staging node scripts/deploy.js deploy",
    "deploy:production": "NODE_ENV=production node scripts/deploy.js deploy",
    "deploy:demo": "NODE_ENV=demo node scripts/deploy.js deploy",
    "docker:build": "docker build -t medspasync-backend .",
    "docker:build:production": "docker build -f Dockerfile.production -t medspasync-backend-production .",
    "docker:run:dev": "docker-compose up -d",
    "docker:run:staging": "docker-compose -f docker-compose.staging.yml up -d",
    "docker:run:production": "docker-compose -f docker-compose.production.yml up -d",
    "docker:run:demo": "docker-compose -f docker-compose.demo.yml up -d",
    "docker:stop": "docker-compose down",
    "docker:stop:staging": "docker-compose -f docker-compose.staging.yml down",
    "docker:stop:production": "docker-compose -f docker-compose.production.yml down",
    "docker:stop:demo": "docker-compose -f docker-compose.demo.yml down",
    "docker:logs": "docker-compose logs -f",
    "docker:logs:staging": "docker-compose -f docker-compose.staging.yml logs -f",
    "docker:logs:production": "docker-compose -f docker-compose.production.yml logs -f",
    "docker:logs:demo": "docker-compose -f docker-compose.demo.yml logs -f",
    "backup:create": "node scripts/backup.js create",
    "backup:restore": "node scripts/backup.js restore",
    "monitor:start": "node scripts/monitor.js start",
    "monitor:stop": "node scripts/monitor.js stop",
    "monitor:status": "node scripts/monitor.js status",
    "clean": "rimraf dist node_modules/.cache"
  },
  "dependencies": {
    "@azure/identity": "^4.0.1",
    "@azure/keyvault-secrets": "^4.7.3",
    "axios": "^1.9.0",
    "bcryptjs": "^2.4.3",
    "compression": "^1.8.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "csv-parser": "^3.2.0",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.0.0",
    "express-validator": "^7.2.1",
    "form-data": "^4.0.3",
    "fuzzball": "^2.2.2",
    "helmet": "^7.0.0",
    "jsonwebtoken": "^9.0.0",
    "mongoose": "^7.6.1",
    "morgan": "^1.10.0",
    "multer": "^2.0.1",
    "nodemailer": "^6.9.9",
    "pdfkit": "^0.13.0",
    "pg": "^8.11.3",
    "redis": "^4.6.10",
    "stripe": "^12.15.0",
    "exceljs": "^4.4.0",
    "winston": "^3.11.0",
    "ws": "^8.16.0",
    "zod": "^3.22.0",
    "natural": "^6.10.4",
    "node-cron": "^3.0.3",
    "uuid": "^9.0.0",
    "crypto-js": "^4.2.0",
    "express-slow-down": "^2.0.1",
    "express-brute": "^1.0.1",
    "express-brute-redis": "^0.0.1",
    "express-ip": "^1.0.4",
    "express-useragent": "^1.0.15",
    "express-request-id": "^1.4.1",
    "express-pino-logger": "^7.0.0",
    "pino": "^8.17.2",
    "pino-pretty": "^10.3.1"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/express": "^4.17.21",
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/multer": "^1.4.11",
    "@types/nodemailer": "^6.4.14",
    "@types/uuid": "^9.0.7",
    "@types/cors": "^2.8.17",
    "@types/compression": "^1.7.5",
    "@types/cookie-parser": "^1.4.6",
    "@types/morgan": "^1.9.9",
    "@types/ws": "^8.5.10",
    "@types/node-cron": "^3.0.11",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-security": "^2.1.1",
    "eslint-plugin-node": "^11.1.0",
    "prettier": "^3.2.5",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "@types/jest": "^29.5.12",
    "supertest": "^7.1.1",
    "@types/supertest": "^6.0.2",
    "nodemon": "^3.0.2",
    "typescript": "^5.4.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.1.0",
    "rimraf": "^6.0.1",
    "webpack": "^5.90.3",
    "webpack-bundle-analyzer": "^4.10.1",
    "@playwright/test": "^1.42.1",
    "playwright": "^1.42.1"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "keywords": [
    "medspa",
    "reconciliation",
    "ai",
    "healthcare",
    "management",
    "api",
    "hipaa",
    "compliance",
    "machine-learning",
    "analytics",
    "real-time"
  ],
  "author": "MythosMediaCo",
  "license": "MIT",
  "prisma": {
    "schema": "./prisma/schema.prisma"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.{js,ts}",
      "!src/**/*.d.ts",
      "!src/**/*.test.{js,ts}",
      "!src/**/*.spec.{js,ts}"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  }
}
